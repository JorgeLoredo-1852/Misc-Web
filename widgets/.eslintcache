[{"C:\\Users\\jorge\\Website-1stProject\\widgets\\src\\index.js":"1","C:\\Users\\jorge\\Website-1stProject\\widgets\\src\\App.js":"2","C:\\Users\\jorge\\Website-1stProject\\widgets\\src\\components\\Accordion.js":"3","C:\\Users\\jorge\\Website-1stProject\\widgets\\src\\components\\Search.js":"4","C:\\Users\\jorge\\Website-1stProject\\widgets\\src\\components\\Dropdown.js":"5"},{"size":148,"mtime":1608240237494,"results":"6","hashOfConfig":"7"},{"size":2919,"mtime":1608343176475,"results":"8","hashOfConfig":"7"},{"size":1059,"mtime":1608256449595,"results":"9","hashOfConfig":"7"},{"size":2188,"mtime":1608319061033,"results":"10","hashOfConfig":"7"},{"size":1537,"mtime":1608342714586,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"la6hjd",{"filePath":"15","messages":"16","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\jorge\\Website-1stProject\\widgets\\src\\index.js",[],["25","26"],"C:\\Users\\jorge\\Website-1stProject\\widgets\\src\\App.js",["27","28","29","30","31","32","33","34"],"C:\\Users\\jorge\\Website-1stProject\\widgets\\src\\components\\Accordion.js",[],"C:\\Users\\jorge\\Website-1stProject\\widgets\\src\\components\\Search.js",["35"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Search = () =>{\r\n    const [term, setTerm] = useState('programming');\r\n    const [results, setResults] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const search = async () => {\r\n            const {data} = await axios.get('https://en.wikipedia.org/w/api.php',{\r\n                params: {\r\n                    action : 'query',\r\n                    list : 'search',\r\n                    origin : '*',\r\n                    format : 'json',\r\n                    srsearch : term\r\n                }\r\n            })\r\n            setResults(data.query.search);\r\n        };\r\n\r\n        if(term && !results.length){\r\n            search();\r\n        }\r\n        else{\r\n            const timeId = setTimeout(()=>{\r\n                if(term){\r\n                    search();\r\n                }\r\n            }, 1000);\r\n\r\n            return (\r\n                () => { clearTimeout(timeId) }\r\n            );\r\n        }\r\n    },[term]);\r\n    \r\n    const renderedResults = results.map( (result) => {\r\n        return(\r\n            <div key = {result.pageid} className= \"row\" style={{margin:\"10px\",border:\"1px solid black\"}}>\r\n                <div style={{padding:\"10px\"}}>\r\n                    <a href= {\"https://en.wikipedia.org?curid=\" + result.pageid} type=\"button\" class=\"btn-lg btn-outline-dark float-right\">Go</a>\r\n                    <div className=\"title\" style={{fontSize:\"1.3em\",fontWeight:\"bolder\"}}>{result.title}</div>\r\n                    <div className=\"content\" style={{paddingRight:\"100px\"}}>{result.snippet}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"form-group\">\r\n                <label>Search a term</label>\r\n                <input\r\n                    value = {term} \r\n                    onChange = {(event) => {setTerm(event.target.value)}} \r\n                    className=\"form-control\"/>\r\n            </div>\r\n            <div className= \"container-fluid\" style={{padding:\"0px\"}}>\r\n                {renderedResults}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Search;","C:\\Users\\jorge\\Website-1stProject\\widgets\\src\\components\\Dropdown.js",["36","37","38"],"import React, { useState , useEffect, useRef } from 'react';\r\n\r\nconst Dropdown = ({selection, onSelectChange, options}) => {\r\n\r\n    const [openTag, setOpenTag] = useState(false);\r\n    const ref = useRef();\r\n\r\n    useEffect(()=>{\r\n\r\n        const onBodyClick = (event) =>{\r\n            if(ref.current && ref.current.contains(event.target)){\r\n                return;\r\n            }\r\n            setOpenTag(false);\r\n        }\r\n\r\n        document.body.addEventListener('click', onBodyClick);\r\n\r\n        return (()=>{\r\n            document.body.removeEventListener('click',onBodyClick);\r\n        });\r\n    },[]);\r\n\r\n    const renderedColors = options.map((color) =>{\r\n\r\n        if(selection.value === color.value){\r\n            return null;\r\n        }\r\n        return (<a \r\n                    onClick = {()=>{onSelectChange(color);setOpenTag(!openTag);}} \r\n                    className= \"dropdown-item\" \r\n                    key={color.value}\r\n                >{color.label}</a>);\r\n    });\r\n\r\n    return (\r\n        <div ref={ref} style={{border: \"1px solid black\"}}>\r\n            <div type=\"button\" onClick = {()=>setOpenTag(!openTag)}>\r\n                <a class=\"btn dropdown-toggle float-right\"  id=\"dropdownMenuButton\" data-toggle=\"dropdown\"></a>\r\n                <span value = {selection.value} className=\"dropdown-item-text\">{selection.label}</span>\r\n            </div>\r\n            <div className= {openTag ? \"\" : \"collapse\"}>\r\n                {renderedColors}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dropdown;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":17},{"ruleId":"43","severity":1,"message":"47","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":14},{"ruleId":"43","severity":1,"message":"48","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":16},{"ruleId":"43","severity":1,"message":"49","line":6,"column":7,"nodeType":"45","messageId":"46","endLine":6,"endColumn":12},{"ruleId":"43","severity":1,"message":"50","line":39,"column":12,"nodeType":"45","messageId":"46","endLine":39,"endColumn":21},{"ruleId":"43","severity":1,"message":"51","line":39,"column":23,"nodeType":"45","messageId":"46","endLine":39,"endColumn":35},{"ruleId":"43","severity":1,"message":"52","line":40,"column":12,"nodeType":"45","messageId":"46","endLine":40,"endColumn":23},{"ruleId":"43","severity":1,"message":"53","line":40,"column":25,"nodeType":"45","messageId":"46","endLine":40,"endColumn":39},{"ruleId":"54","severity":1,"message":"55","line":36,"column":7,"nodeType":"56","endLine":36,"endColumn":13,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":29,"column":17,"nodeType":"60","endLine":33,"endColumn":18},{"ruleId":"61","severity":1,"message":"62","line":39,"column":17,"nodeType":"60","endLine":39,"endColumn":108},{"ruleId":"58","severity":1,"message":"59","line":39,"column":17,"nodeType":"60","endLine":39,"endColumn":108},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Accordion' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","'Dropdown' is defined but never used.","'items' is assigned a value but never used.","'selection' is assigned a value but never used.","'setSelection' is assigned a value but never used.","'visDropdown' is assigned a value but never used.","'setVisDropdown' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'results.length'. Either include it or remove the dependency array.","ArrayExpression",["65"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [results.length, term]",{"range":"68","text":"69"},[997,1003],"[results.length, term]"]